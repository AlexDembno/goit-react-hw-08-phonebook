{"version":3,"file":"static/js/226.fb9afb8e.chunk.js","mappings":"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","sources":["modules/FormAddContacts/FormAddContacts.module.css","modules/FormAddContacts/FormAddContacts.jsx","modules/FilterContacts/FilterContacts.jsx","redux/filterSlise/filter-selectors.js","webpack://react-homework-template/./src/modules/Contacts/Contacts.module.css?efb4","modules/Contacts/Contacts.jsx","webpack://react-homework-template/./src/pages/PhoneBook/PhoneBook.module.css?da4e","pages/PhoneBook/PhoneBook.jsx","webpack://react-homework-template/./src/shared/components/Input/Input.module.css?122e","shared/components/Input/Input.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n} from 'redux/contactsSlice/contactOperations';\n\nimport { selectContacts } from 'redux/contactsSlice/contacts-selectors';\nimport Input from 'shared/components/Input/Input';\nimport Button from 'shared/components/Button/Button';\nimport styles from './FormAddContacts.module.css';\n\nfunction FormAddContacts() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContacts({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const findDublicate = name => {\n    const result = contacts.find(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase()\n    );\n    return result;\n  };\n\n  const addContacts = ({ name, number }) => {\n    if (findDublicate(name, number)) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(fetchAddContacts({ name, number }));\n  };\n\n  const handleChangeInput = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label>\n        <Input\n          onChange={handleChangeInput}\n          type={'text'}\n          name={'name'}\n          value={name}\n          placeholder={'Enter name'}\n        />\n      </label>\n      <label>\n        <Input\n          onChange={handleChangeInput}\n          type={'tel'}\n          name={'number'}\n          value={number}\n          placeholder={'Enter number'}\n        />\n      </label>\n      <Button name={'Add contact'} type={'submit'} />\n    </form>\n  );\n}\n\nexport default FormAddContacts;\n","import { filterContact } from 'redux/filterSlise/filter-slise';\nimport { useDispatch } from 'react-redux';\nimport Input from 'shared/components/Input/Input';\n\nfunction FilterContacts() {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => {\n    const action = filterContact(e.currentTarget.value);\n    dispatch(action);\n  };\n  return (\n    <label>\n      <Input\n        onChange={handleChangeFilter}\n        type={'text'}\n        placeholder={'Find name'}\n      />\n    </label>\n  );\n}\n\nexport default FilterContacts;\n","export const selectFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contacts_item__tmPrP\",\"columb\":\"Contacts_columb__N2GwO\",\"table\":\"Contacts_table__CPRk5\",\"text\":\"Contacts_text__JRArB\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchDeleteContacts } from 'redux/contactsSlice/contactOperations';\nimport { selectContacts } from 'redux/contactsSlice/contacts-selectors';\nimport { selectFilter } from 'redux/filterSlise/filter-selectors';\nimport styles from './Contacts.module.css';\nimport Button from 'shared/components/Button/Button';\n\nfunction Contacts() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const findName = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const result = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return result;\n  };\n\n  const filterName = findName();\n\n  const deleteNumber = contactId => {\n    dispatch(fetchDeleteContacts(contactId));\n  };\n\n  return (\n    <>\n      {filterName.length > 0 ? (\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th className={styles.columb}>N</th>\n              <th className={styles.columb}>Name</th>\n              <th className={styles.columb}>Tel</th>\n              <th className={styles.columb}>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filterName.map(({ id, name, number }, index) => (\n              <tr key={id}>\n                <td className={styles.text}>{index + 1}</td>\n                <td className={styles.text}>{name}</td>\n                <td className={styles.text}>{number}</td>\n                <td>\n                  <Button\n                    onClick={() => deleteNumber(id)}\n                    name={'Delete'}\n                    type={'button'}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p className={styles.text}>No contacts</p>\n      )}\n    </>\n  );\n}\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PhoneBook_wrapper__v8Rrr\",\"title\":\"PhoneBook_title__v6WEu\",\"text\":\"PhoneBook_text__dcfIw PhoneBook_title__v6WEu\"};","import FormAddContacts from 'modules/FormAddContacts/FormAddContacts';\nimport FilterContacts from 'modules/FilterContacts/FilterContacts';\nimport Contacts from 'modules/Contacts/Contacts';\nimport style from './PhoneBook.module.css';\n\nfunction PhoneBook() {\n  return (\n    <div className={style.wrapper}>\n      <h1 className={style.title}>PhoneBook</h1>\n      <FormAddContacts />\n      <FilterContacts />\n      <p className={style.text}>Contacts</p>\n      <Contacts />\n    </div>\n  );\n}\n\nexport default PhoneBook;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__2SVdu\"};","import styles from './Input.module.css';\n\nfunction Input({ ...props }) {\n  return (\n    <>\n      <input\n        type={props.type}\n        className={styles.input}\n        name={props.name}\n        value={props.value}\n        required\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n      />\n    </>\n  );\n}\n\nexport default Input;\n"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","useEffect","fetchAllContacts","reset","addContacts","result","find","toLowerCase","findDublicate","alert","fetchAddContacts","handleChangeInput","e","target","value","onSubmit","preventDefault","className","styles","Input","onChange","type","placeholder","Button","action","filterContact","currentTarget","selectFilter","store","filter","filterName","contact","includes","length","map","index","id","onClick","contactId","fetchDeleteContacts","style","props","required"],"sourceRoot":""}